---
- name: Create Docker volume for Grafana data
  community.docker.docker_volume:
    name: grafana_data
    driver: local
    labels:
      app: grafana
      service: grafana

- name: Create Docker volume for Grafana logs
  community.docker.docker_volume:
    name: grafana_logs
    driver: local
    labels:
      app: grafana
      service: grafana

- name: Ensure provisioning directory structure exists
  ansible.builtin.file:
    path: "{{ grafana_provisioning_dir }}/{{ item }}"
    state: directory
    mode: "0755"
    # owner: "{{ grafana_container_uid }}"
    # group: "{{ grafana_container_uid }}"
  loop:
    - "datasources"
    - "dashboards"
    - "alerting"

- name: Deploy provisioning configs
  ansible.builtin.copy:
    src: "files/provisioning/"
    dest: "{{ grafana_provisioning_dir }}"
    mode: "0644"
    # owner: "{{ grafana_container_uid }}"
    # group: "{{ grafana_container_uid }}"
  when: grafana_config_deploy
  notify: Restart Grafana

- name: Copy Grafana provisioning datasources file from template
  template:
    src: ds.yml.j2
    dest: "{{ grafana_provisioning_dir }}/datasources/ds.yml"
    mode: '0644'
  when: grafana_config_deploy
  notify: Restart Grafana

- name: Ensure Docker network exists
  community.docker.docker_network:
    name: "{{ grafana_docker_network }}"
    driver: bridge
    attachable: true
    state: present

- name: Deploy Grafana container
  community.docker.docker_container:
    name: "{{ grafana_container_name }}"
    image: "{{ grafana_image }}:{{ grafana_version }}"
    env:
      GF_SECURITY_ADMIN_USER: "{{ grafana_admin_user }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
      GF_SECURITY_DISABLE_INITIAL_ADMIN_PASSWORD_HINT: "true"
      GF_SERVER_DOMAIN: "{{ grafana_domain }}"
      GF_DATABASE_TYPE: "sqlite3"
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning"
    ports:
      - "{{ grafana_http_port }}:3000"
    volumes:
      - "grafana_data:/var/lib/grafana"
      - "grafana_logs:/var/log/grafana"
      - "{{ grafana_provisioning_dir }}:/etc/grafana/provisioning:ro"
    networks:
      - name: "{{ grafana_docker_network }}"
    restart_policy: "{{ grafana_container_restart_policy }}"
    user: "{{ grafana_container_uid }}"
    labels:
      app: grafana
      monitoring: "true"
    state: started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

- name: Verify Grafana container status
  community.docker.docker_container_info:
    name: grafana
  register: grafana_container_info
  changed_when: false

- name: Display Grafana service status
  ansible.builtin.debug:
    msg: "Grafana is {{ grafana_container_info.container.State.Status }} ({{ grafana_container_info.container.State.Health.Status if grafana_container_info.container.State.Health is defined else 'no healthcheck' }})"