---
- name: Ensure Docker network exists
  community.docker.docker_network:
    name: "{{ loki_docker_network }}"
    driver: bridge
    attachable: true
    labels:
      app: loki
      monitoring: "true"
    state: present

- name: Ensure Loki volume exists
  community.docker.docker_volume:
    name: "{{ loki_volume }}"
    driver: local
    labels:
      app: loki
      service: loki
    state: present

- name: Ensure Loki config directory exists
  ansible.builtin.file:
    path: "{{ loki_etc }}"
    state: directory
    mode: "0755"
  when: loki_config_deploy

- name: Deploy Loki configuration
  ansible.builtin.copy:
    src: "files/loki-config.yml"
    dest: "{{ loki_etc }}/local-config.yml"
    mode: "0644"
  when: loki_config_deploy
  notify: Restart Loki

- name: Run Loki container
  community.docker.docker_container:
    name: loki
    image: "{{ loki_image }}:{{ loki_version }}"
    ports:
      - "{{ loki_http_port }}:3100"
    volumes:
      - "{{ loki_volume }}:/loki"
      - "{{ loki_etc }}:/etc/loki:ro"
    command: -config.file=/etc/loki/local-config.yml
    networks:
      - name: "{{ loki_docker_network }}"
    restart_policy: "{{ loki_container_restart_policy }}"
    user: "{{ loki_container_uid }}"
    labels:
      app: loki
      monitoring: "true"
    state: started
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: "30s"
      timeout: "10s"
      retries: 3
      start_period: "30s"

- name: Verify Loki container status
  community.docker.docker_container_info:
    name: loki
  register: loki_container_info
  changed_when: false

- name: Display Loki service status
  ansible.builtin.debug:
    msg: "Loki is {{ loki_container_info.container.State.Status }} ({{ loki_container_info.container.State.Health.Status if loki_container_info.container.State.Health is defined else 'no healthcheck' }})"